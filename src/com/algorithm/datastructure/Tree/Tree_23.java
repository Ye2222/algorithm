package com.algorithm.datastructure.Tree;

public class Tree_23 {
    /*
    1) 2-3 树的所有叶子节点都在同一层.(只要是 B 树都满足这个条件)
    2) 有两个子节点的节点叫二节点， 二节点要么没有子节点， 要么有两个子节点.
    3) 有三个子节点的节点叫三节点， 三节点要么没有子节点， 要么有三个子节点
    4) 当按照规则插入一个数到某个节点时， 不能满足上面三个要求， 就需要拆，
    先向上拆， 如果上层满， 则拆本层，拆后仍然需要满足上面 3 个条件。
    5) 对于三节点的子树的值大小仍然遵守(BST 二叉排序树)的规则
     */
}
